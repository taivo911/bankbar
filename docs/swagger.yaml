openapi: 3.0.2
info:
  title: Barbank
  version: 1.0.0
paths:
  /users:
    summary: Path used to manage the list of users.
    description: >-
      The REST endpoint/path used to list and create zero or more `user` entities.  This path contains a
      `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `user` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - users
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                'User validation failed: {param}: Path `{param}` is required.':
                  value:
                    error: 'User validation failed: {param}: Path `{param}` is required.'
          description: Input validation failed. Some parameter is missing or in incorrect format.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Username already exists:
                  value:
                    error: Username already exists
          description: Username already exists
      operationId: createuser
      summary: Create a user
      description: Creates a new instance of a `user`.
  /sessions:
    summary: Path used to manage the list of sessions.
    description: >-
      The REST endpoint/path used to list and create zero or more `session` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `session` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session'
            examples:
              POST /sessions request body:
                value:
                  username: test
                  password: testtest
        required: true
      tags:
        - sessions
      responses:
        '201':
          content:
            application/json:
              examples:
                POST /sessions 201 response:
                  value:
                    token: 615c0ba991b810f1daca206f
          description: Successful response.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials
          description: Invalid credentials
      operationId: createsession
      summary: Create a session
      description: Creates a new instance of a `session`.
    delete:
      tags:
        - sessions
      responses:
        '204':
          description: Successful logout
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid Authorization header format:
                  value:
                    error: Invalid Authorization header format
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
                Invalid token:
                  value:
                    error: Invalid token
          description: Invalid Authorization header
      security:
        -
          Bearer: []
      summary: Logs the user out
      description: Destroy the session
  /users/current:
    get:
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
              examples:
                User details:
                  value:
                    accounts:
                      -
                        balance: 10000
                        createdAt: '2021-09-23T20:00:54.508Z'
                        currency: USD
                        id: 614cde2a57d341d33e89668e
                        name: Main
                        number: abc900220f41acec02d67fe4d087b108300
                        userId: 614cde2a57d341d33e896690
                    id: 614cde2a57d341d33e896690
                    name: test
                    username: test
          description: |
            Returns user's details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid Authorization header format:
                  value:
                    error: Invalid Authorization header
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
          description: Problem with authorization header
      security:
        -
          Bearer: []
      summary: Get user's details
      description: Returns instance of `user`
  /transactions:
    summary: Path used to manage the list of transactions.
    description: >-
      The REST endpoint/path used to list and create zero or more `transaction` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `transaction` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - transactions
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid amount:
                  value:
                    error: Invalid amount
                Missind parameter:
                  value:
                    error: 'Transaction validation failed: .* : Path `.*` is required.'
                'Path `accounFrom`  (`a`) is shorter than the minimum allowed length. ':
                  value:
                    error: 'Path `.*`  (`.*`) is shorter than the minimum allowed length. '
                'Transaction validation failed: explanation: Path `explanation` is required.':
                  value:
                    error: >-
                      Transaction validation failed: explanation: Path `explanation` is
                      required.
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid Authorization header format:
                  value:
                    error: Invalid Authorization header
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
          description: Problem with authorization header
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Insufficient funds:
                  value:
                    error: Insufficient funds
          description: Insufficient funds
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                accountFrom not found:
                  value:
                    error: accountFrom not found
          description: Not found
      security:
        -
          Bearer: []
      operationId: createtransaction
      description: Creates a new instance of a transaction
  /transactions/b2b:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jwt'
        required: true
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
              examples:
                POST /transactions/b2b response:
                  value:
                    receiverName: Taivo
          description: Transaction accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid signature:
                  value:
                    error: Invalid signature
          description: Invalid signature
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Bank \w+ was not found in Central Bank:
                  value:
                    error: Bank \w+ was not found in Central Bank
          description: Bank was not found in Central Bank
        '502':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                There was an error communication with Central Bank:
                  value:
                    error: There was an error communication with Central Bank.*
          description: There was an error communication with Central Bank
      summary: Accepts transactions from other banks
  /transactions/jwks:
    description: ''
    get:
      tags:
        - transactions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jwks'
          description: >-
            Set of keys in jwks format containing the public key used to verify JSON Web Token
            sent by the origin bank when initiating a transaction with another bank and signed
            with the corresponding private key
      summary: Returns JWKS for validating jwt-signatures
      description: >-
        Returns set of keys containing the public key used to verify JSON Web Token sent by the origin
        bank when initiating a transaction with another bank and signed with the corresponding private
        key
components:
  schemas:
    user:
      title: Root Type for user
      description: ''
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
      example:
        username: test
        password: testtest
        name: test
    error:
      title: Root Type for error
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: Error message.
    session:
      description: ''
      type: object
    transaction:
      title: Root Type for transaction
      description: ''
      type: object
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        amount:
          format: int32
          type: integer
        explanation:
          type: string
      example:
        accountFrom: cdd3207da5457d94ed04c0b5b56cf2b5a33
        accountTo: cddaf622492dd0234b6928678aa1fe0e294
        amount: 0.01
        explanation: Don’t go spend it all at once
    jwt:
      title: Root Type for jwt
      description: ''
      type: object
      properties:
        jwt:
          type: string
      example:
        jwt: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50RnJvbSI6ImNkZDMyMDdkYTU0NTdkOTRlZDA0YzBiNWI1NmNmMmI1YTMzIiwiYWNjb3VudFRvIjoiY2RkYWY2MjI0OTJkZDAyMzRiNjkyODY3OGFhMWZlMGUyOTQiLCJhbW91bnQiOjEsImN1cnJlbmN5IjoiVVNEIiwiZXhwbGFuYXRpb24iOiJ4eHgiLCJzZW5kZXJOYW1lIjoiVGFpdm8gTnVyayJ9.cZALqpZE3_fDH0Ofymwzw5LB5gIwPcdUxtm518OLvFY
    jwks:
      title: Root Type for jwks
      description: ''
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
            properties:
              kty:
                type: string
              kid:
                type: string
              'n':
                type: string
              e:
                type: string
      example:
        keys:
          -
            kty: RSA
            kid: QVhlbsNZZY83YRFHS-OWJqiqEMbjoaqhZIiPVRZgW-k
            'n': >-
              RlWISHXpjWXdYGLSB99okpIW8eEL9ochaEMUyZ8bHW46CLXX-kkI8l6ue7KtxuyrWpuOpuzrHtZWp29H6fgyOq1mKZ0heK-XkV1rJoKHd-6wc0Jdpg2SPwC6BWRGcE2HnvHxT0s8pfa_GwTd7Tu27gIR2S7TVx7N86E5jxll7t0
            e: AQAB
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
tags:
  -
    name: sessions
    description: ''
  -
    name: users
    description: ''
  -
    name: transactions
    description: ''